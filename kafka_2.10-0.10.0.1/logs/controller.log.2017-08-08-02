[2017-08-08 02:03:47,881] DEBUG [TopicChangeListener on Controller 0]: Topic change listener fired for path /brokers/topics with children jsonTopic (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-08-08 02:03:47,899] INFO [TopicChangeListener on Controller 0]: New topics: [Set(jsonTopic)], deleted topics: [Set()], new partition replica assignment [Map([jsonTopic,0] -> List(0))] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-08-08 02:03:47,907] INFO [Controller 0]: New topic creation callback for [jsonTopic,0] (kafka.controller.KafkaController)
[2017-08-08 02:03:47,934] INFO [Controller 0]: New partition creation callback for [jsonTopic,0] (kafka.controller.KafkaController)
[2017-08-08 02:03:47,943] INFO [Partition state machine on Controller 0]: Invoking state change to NewPartition for partitions [jsonTopic,0] (kafka.controller.PartitionStateMachine)
[2017-08-08 02:03:47,974] INFO [Replica state machine on controller 0]: Invoking state change to NewReplica for replicas [Topic=jsonTopic,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-08-08 02:03:47,990] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions [jsonTopic,0] (kafka.controller.PartitionStateMachine)
[2017-08-08 02:03:47,992] DEBUG [Partition state machine on Controller 0]: Live assigned replicas for partition [jsonTopic,0] are: [List(0)] (kafka.controller.PartitionStateMachine)
[2017-08-08 02:03:47,996] DEBUG [Partition state machine on Controller 0]: Initializing leader and isr for partition [jsonTopic,0] to (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) (kafka.controller.PartitionStateMachine)
[2017-08-08 02:03:48,054] INFO [Replica state machine on controller 0]: Invoking state change to OnlineReplica for replicas [Topic=jsonTopic,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-08-08 02:03:48,071] WARN [Controller-0-to-broker-0-send-thread], Controller 0 epoch 1 fails to send request {controller_id=0,controller_epoch=1,partition_states=[{topic=jsonTopic,partition=0,controller_epoch=1,leader=0,leader_epoch=0,isr=[0],zk_version=0,replicas=[0]}],live_leaders=[{id=0,host=ubuntu,port=9092}]} to broker ubuntu:9092 (id: 0 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 0 was disconnected before the response was read
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1$$anonfun$apply$1.apply(NetworkClientBlockingOps.scala:87)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1$$anonfun$apply$1.apply(NetworkClientBlockingOps.scala:84)
	at scala.Option.foreach(Option.scala:236)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1.apply(NetworkClientBlockingOps.scala:84)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1.apply(NetworkClientBlockingOps.scala:80)
	at kafka.utils.NetworkClientBlockingOps$.recursivePoll$2(NetworkClientBlockingOps.scala:137)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollContinuously$extension(NetworkClientBlockingOps.scala:143)
	at kafka.utils.NetworkClientBlockingOps$.blockingSendAndReceive$extension(NetworkClientBlockingOps.scala:80)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:190)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:181)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2017-08-08 02:03:48,385] INFO [Controller-0-to-broker-0-send-thread], Controller 0 connected to ubuntu:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2017-08-08 02:03:49,411] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2017-08-08 02:03:49,412] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([jsonTopic,0] -> List(0))) (kafka.controller.KafkaController)
[2017-08-08 02:03:49,417] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2017-08-08 02:03:49,426] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2017-08-08 02:04:34,726] DEBUG [TopicChangeListener on Controller 0]: Topic change listener fired for path /brokers/topics with children partitionTopic,jsonTopic (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-08-08 02:04:34,730] INFO [TopicChangeListener on Controller 0]: New topics: [Set(partitionTopic)], deleted topics: [Set()], new partition replica assignment [Map([partitionTopic,0] -> List(0))] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-08-08 02:04:34,731] INFO [Controller 0]: New topic creation callback for [partitionTopic,0] (kafka.controller.KafkaController)
[2017-08-08 02:04:34,734] INFO [Controller 0]: New partition creation callback for [partitionTopic,0] (kafka.controller.KafkaController)
[2017-08-08 02:04:34,734] INFO [Partition state machine on Controller 0]: Invoking state change to NewPartition for partitions [partitionTopic,0] (kafka.controller.PartitionStateMachine)
[2017-08-08 02:04:34,735] INFO [Replica state machine on controller 0]: Invoking state change to NewReplica for replicas [Topic=partitionTopic,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-08-08 02:04:34,736] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions [partitionTopic,0] (kafka.controller.PartitionStateMachine)
[2017-08-08 02:04:34,736] DEBUG [Partition state machine on Controller 0]: Live assigned replicas for partition [partitionTopic,0] are: [List(0)] (kafka.controller.PartitionStateMachine)
[2017-08-08 02:04:34,737] DEBUG [Partition state machine on Controller 0]: Initializing leader and isr for partition [partitionTopic,0] to (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) (kafka.controller.PartitionStateMachine)
[2017-08-08 02:04:34,761] INFO [Replica state machine on controller 0]: Invoking state change to OnlineReplica for replicas [Topic=partitionTopic,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-08-08 02:08:49,411] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2017-08-08 02:08:49,412] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([partitionTopic,0] -> List(0), [jsonTopic,0] -> List(0))) (kafka.controller.KafkaController)
[2017-08-08 02:08:49,412] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2017-08-08 02:08:49,412] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2017-08-08 02:13:49,411] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2017-08-08 02:13:49,412] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([partitionTopic,0] -> List(0), [jsonTopic,0] -> List(0))) (kafka.controller.KafkaController)
[2017-08-08 02:13:49,412] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2017-08-08 02:13:49,412] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2017-08-08 02:18:49,411] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2017-08-08 02:18:49,412] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([partitionTopic,0] -> List(0), [jsonTopic,0] -> List(0))) (kafka.controller.KafkaController)
[2017-08-08 02:18:49,412] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2017-08-08 02:18:49,412] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2017-08-08 02:23:49,411] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2017-08-08 02:23:49,413] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([partitionTopic,0] -> List(0), [jsonTopic,0] -> List(0))) (kafka.controller.KafkaController)
[2017-08-08 02:23:49,413] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2017-08-08 02:23:49,413] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2017-08-08 02:28:49,411] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2017-08-08 02:28:49,412] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([partitionTopic,0] -> List(0), [jsonTopic,0] -> List(0))) (kafka.controller.KafkaController)
[2017-08-08 02:28:49,412] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2017-08-08 02:28:49,412] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2017-08-08 02:33:49,411] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2017-08-08 02:33:49,413] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([partitionTopic,0] -> List(0), [jsonTopic,0] -> List(0))) (kafka.controller.KafkaController)
[2017-08-08 02:33:49,413] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2017-08-08 02:33:49,413] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2017-08-08 02:38:49,411] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2017-08-08 02:38:49,412] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([partitionTopic,0] -> List(0), [jsonTopic,0] -> List(0))) (kafka.controller.KafkaController)
[2017-08-08 02:38:49,412] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2017-08-08 02:38:49,412] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2017-08-08 02:43:49,411] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2017-08-08 02:43:49,412] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([partitionTopic,0] -> List(0), [jsonTopic,0] -> List(0))) (kafka.controller.KafkaController)
[2017-08-08 02:43:49,412] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2017-08-08 02:43:49,412] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2017-08-08 02:48:49,411] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2017-08-08 02:48:49,412] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([partitionTopic,0] -> List(0), [jsonTopic,0] -> List(0))) (kafka.controller.KafkaController)
[2017-08-08 02:48:49,412] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2017-08-08 02:48:49,412] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2017-08-08 02:53:49,411] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2017-08-08 02:53:49,413] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([partitionTopic,0] -> List(0), [jsonTopic,0] -> List(0))) (kafka.controller.KafkaController)
[2017-08-08 02:53:49,413] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2017-08-08 02:53:49,413] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2017-08-08 02:58:49,411] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2017-08-08 02:58:49,413] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([partitionTopic,0] -> List(0), [jsonTopic,0] -> List(0))) (kafka.controller.KafkaController)
[2017-08-08 02:58:49,413] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2017-08-08 02:58:49,413] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
